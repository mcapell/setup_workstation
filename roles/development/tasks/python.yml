---

- name: Install python tools
  become: yes
  apt: name={{ items }} state=present
  vars:
    items:
      - python-pysqlite2
      - python-dev


# ------
# Pyenv
# ------

- name: Check pyenv exists
  stat:
    path: "{{ home }}/.pyenv"
  register: pyenv_check
  changed_when: pyenv_check.stat.exists == false

- name: Install pyenv requirements to build Python versions
  become: yes
  apt: name={{ items }} state=present
  vars:
    items:
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - llvm
      - libncurses5-dev
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libffi-dev
      - liblzma-dev
      - python-openssl
  when: pyenv_check is changed

- name: Install pyenv as python version manager
  git:
    repo: "https://github.com/pyenv/pyenv.git"
    dest: "{{ home }}/.pyenv"
    version: master
  when: pyenv_check is changed

- name: Install python3 versions using pyenv
  shell: "{{ home }}/.pyenv/bin/pyenv install {{ item }}"
  with_items: "{{ bin_python }}"
  when: pyenv_check is changed

- name: Set new installed python versions as global
  command: '{{ home }}/.pyenv/bin/pyenv global {{ bin_python | join(" ") }}'
  when: pyenv_check is changed

- name: Install pyenv update plugin
  git:
    repo: "https://github.com/pyenv/pyenv-update"
    dest: "{{ home }}/.pyenv/plugins/pyenv-update"
    version: master
  when: pyenv_check is changed

- name: Install pipx
  pip: executable={{ home }}/.pyenv/shims/pip3 name=pipx


# ------
# Pipenv
# ------

- name: Check pipenv exists
  stat:
    path: "{{ home }}/.local/share/virtualenvs"
  register: pipenv_check
  changed_when: pipenv_check.stat.exists == false

- name: Download pipenv installer
  get_url:
    url="https://raw.githubusercontent.com/kennethreitz/pipenv/master/get-pipenv.py"
    dest="/tmp/get-pipenv.py"
  when: pipenv_check is changed

- name: Install pipenv
  become: yes
  command: python /tmp/get-pipenv.py
  when: pipenv_check is changed

# ------
# py-spy
# ------

- name: Check py-spy is installed
  stat:
    path: "{{ home }}/.local/bin/py-spy"
  register: check_pyspy
  changed_when: check_pyspy.stat.exists == false

- name: Install py-spy
  pip: name=py-spy executable={{ home }}/.pyenv/shims/pipx
  when: check_pyspy is changed
